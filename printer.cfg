[include shell_command.cfg]
[include sensorless.cfg]
[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include NozzleClean.cfg]
[include led_progress.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
#[include ./KAMP/Line_Purge.cfg]
[include ./KAMP/Voron_Purge.cfg]
#[include ./KAMP/Smart_Park.cfg]

[exclude_object]
#[include macros.cfg]

###VERSION: 4.1.0
#DATE 111823
## changed Z offset from 0.360 to  z_offset = -z_offset = -0.300 + also changed EM setting in the slicer down 0.005 (Lower number) o reduce very slight overextrusion.




##################################################################################################
#  OVERVIEW - THIS IS USING BTT MANTA M8P 1.1 - CB1 - TAP - CANBUS EBB SB2209 + SENSORLESS HOMING    #
#  Your pin configuration may be different to the below. Always consult your manufacturers pin   #
#  out diagrams                                                                                  #
##################################################################################################
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/YOU_DIDNT_CHANGE_ME_YET
#restart_method: command
##--------------------------------------------------------------------

[force_move]
enable_force_move: true

#####################################################################
#   UUID Setting
#####################################################################
[mcu]
canbus_uuid:8d8160cc0a82

[mcu EBBCan]
canbus_uuid: b57b8507b46f

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3600	    #Max 3800 MZV FREQ	# should not exceed the estimated max_accel for X and Y axes x was 6800 y on 2Hump Ui and x 3800 on mzv		
max_z_velocity: 15 		#Max 15 for 12V TMC Drivers, can increase for 24V	
max_z_accel: 350
square_corner_velocity: 5.0



###########################
# 	Autotune Settings     #
###########################
#[autotune_tmc stepper_x]
#motor: ldo-42sth48-2004mah
#[autotune_tmc stepper_y]
#motor: ldo-42sth48-2004mah

#[autotune_tmc stepper_z]
#motor: ldo-42sth48-2004ac
#[autotune_tmc stepper_z1]
#motor: ldo-42sth48-2004ac
#[autotune_tmc stepper_z2]
#motor: ldo-42sth48-2004ac
#[autotune_tmc stepper_z3]
#motor: ldo-42sth48-2004ac

#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg


#####################################################################
# 	X/Y Stepper Settings
#####################################################################
#######################################################################
##SENSORLESS HOMING - TAP - CHAOTIC LAB CNC VERSION
### To Calibrate Stall  Guard; For TMC2209, start with #  SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_x VALUE=255 # in the console,
#ENTER M84 and manually move carriage to the centre and redo Set_TMC line frmo above again at a lower reading until it 
#completes a full run to the X0 azis
# then ender G28 X0 for X axis and G28 Y0 for y axis. 
#When running the G28 X0 or G28 Y0 command, the toolhead WILL move a millimeter or so before it triggers the virtual endstop. This is normal.
#Assuming that the toolhead moved a millimeter or so and then stopped, change the VALUE to decrease the sensitivity by 5-10, try again, and keep going until you find the first value that successfully homes your printer. The toolhead should gently tap the edge of travel and then stop.
#Follow the Klipper instructions on fine-tuning the value once your toolhead is homing successfully on this axis. Make sure you run
#m84 to disable steppers and reset position central to x and y carriages
#G1 X-10 # to back off the tool head from the chassis to retest - or use the toggles on the klipper GIU.
# Update the driver_SGTHRS or driver_SGT value with your new StallGuard threshold.
# repeat for Y axis
######################################################################
## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: !PB4
enable_pin: !PC11
microsteps: 64
rotation_distance: 40

##--------------------------------------------------------------------
homing_speed: 80 #was 40
homing_retract_dist: 0
##SENSORLESS HOMING
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_positive_dir: true


[tmc2209 stepper_x]
uart_pin: PC10
interpolate: False
run_current: 1.2
sense_resistor: 0.110
########################
#threshold
########################
driver_SGTHRS: 122 #top 145 75 bot

# 255 is most sensitive value, 0 is least sensitive (max was 140... min was 110 on my build) 
#120 # 255 is most sensitive value, 0 is least sensitive (max was 140... min was 110 on my build) 

#calc is max+(max-min)/3 
#eg 140-110= 30
# 30/3=10
#110+10=120 enter 120 into line with driver_SGTHRS: 
#

diag_pin: ^PF3
stealthchop_threshold: 0


## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: !PF11
enable_pin: !PB3
microsteps: 64

rotation_distance: 40
##--------------------------------------------------------------------
homing_speed: 80 #was 40
##SENSORLESS HOMING
endstop_pin: tmc2209_stepper_y:virtual_endstop
#endstop_pin: ^PF4
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_positive_dir: true
homing_retract_dist: 0



[tmc2209 stepper_y]
uart_pin: PF13
interpolate: False
run_current: 1.2
sense_resistor: 0.110
########################
#threshold
########################
driver_SGTHRS: 145 #top160 -140 low
# 255 is most sensitive value, 0 is least sensitive (got 100 max and 93 lowest on my build - yours will be different... go through the motions.)
##SENSORLESS HOMING
diag_pin: ^PF4
stealthchop_threshold: 0



#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

#endstop_pin: EBBCan: PB5  #not needed - tested with and without and sensor reacts
endstop_pin: probe:z_virtual_endstop
position_max: 320

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PF9
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]

step_pin: PD3
dir_pin: PD2
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0



##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PF8
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0







[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 21.928277


gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 10

heater_pin: EBBCan: PB13
Sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3 #if you renamed your board make sure to match the board assignment in front of the pin
#sensor_type:MAX31865
#sensor_pin: EBBCan: PA4  # if your can mcu is called something other than EBBCan, change that
#spi_bus: spi1
#rtd_nominal_r: 1000   # PT1000 should be 1000.  PT100 should be 100
#rtd_reference_r: 4300 # PT1000 should be 4300.  PT100 should be 430
#rtd_num_of_wires: 2   # This is the number of wires connected to the header.  Either 2 (typical) or 4.
pressure_advance: 0.040
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
#min_extrude_temp: 0                                   ## use this for estep calbration only##
min_extrude_temp: 200
max_extrude_cross_section: 5# KAMP setting needed 


max_extrude_only_distance: 101



[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.3
stealthchop_threshold: 999999


[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
off_below: 0.1

[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0
tachometer_pin: EBBCan: PB15
tachometer_ppr: 1


[heater_bed]
heater_pin: PB5
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
max_power: 1.0
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[temperature_sensor buildplate]
sensor_type: Generic 3950
sensor_pin: PA1
min_temp: -40
max_temp: 120

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PA2
min_temp: -40
max_temp: 120

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
min_temp: -40
max_temp: 100

[temperature_sensor CB1]
sensor_type: temperature_host



[probe]
pin: ^EBBCan: PB5
X_offset: 0
Y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
##################################################################
#             TAP MACRO TO CHECK OVER 150DEGREES                  #
##################################################################

## THE BELOW CODE STOPS THE TAP HOMING INTO THE BED AT PROBE TEMPS OVER 150Â°C##
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    SET_DISPLAY_TEXT MSG=" TOO HOT TO TAP-COOLING"                # Displays info
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
    SET_DISPLAY_TEXT MSG="NOZZLE TO HOT TO TAP - COOLING"                # Displays info
        {% endif %}
    {% endif %}



[multi_pin controller_fans]
pins: PE6,PE0

[controller_fan controller_fan]
##  Controller fan
pin: multi_pin:controller_fans
max_power: 0.4
kick_start_time: 0.5
heater: heater_bed



#[heater_fan nevermore_fan]
[output_pin nevermore]
#  Exhaust fan - Nevermore Filter
pin: PC12 #3rd from left below voltage jumpers
value: 0
shutdown_value: 0
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
# heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0 



[quad_gantry_level]

gantry_corners:
	-60,-10
	410,420
points:
	40,25
	40,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 6
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]

speed: 300
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 340,340
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x
# to test follow these instructions - 
#  type SHAPER_CALIBRATE 	
# let run it s course and type  	SAVE_CONFIG
# YOU WILL NEEED TO SSH INTO DEVICE AND NAVIGATE TO /TMP FILE (IF YOU AHVE AN SB2209 IT WILL CREATE A FILE CALLED
# calibration_data_x_20231006_111358.csv - OR SOMETHING CLOSE TO THAT AND calibration_data_y_20231006_111358.csv
# FIND THESE AND CHANGE THE NAMES TO resonances_x_*.csv (* LEAVE YOUR NUMBERS THAT ARE THERE IN THIS FILE NAME AND DO SAME FOR Y AXIS
#  CONVERT TO A GRAPH PUT IN THESE COMMANDS:
# 		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#	GO  TO THE TMP AND YOU WILL FIND 2 X PNG PICTURE FILES. SAVE TO YOUR PC AND YOU CAN THEN LOOK AT THE DATA IN GRAPH FORM
[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345
###########################################################
#                    # DISPLAY #                          #
###########################################################

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 



[neopixel disco1]
pin: PA9
chain_count: 25
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[neopixel disco2]
pin: PB15
chain_count: 25
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#NEOPIXEL_DISPLAY LED="disco1" TYPE=print_percent MODE=progress
#NEOPIXEL_DISPLAY LED="disco2" TYPE=print_percent MODE=progress

#[delayed_gcode setdiscosticks]
#initial_duration: 1
#gcode:
 #       NEOPIXEL_DISPLAY LED="disco1" TYPE=extruder_temp MODE=glow
 #       NEOPIXEL_DISPLAY LED="disco2" TYPE=bed_temp MODE=glow

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

#####################################################################
#   Macros
#####################################################################

#KNOMI#

#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BED_MESH_CALIBRATE_BASE
#variable_probing:False

#gcode:
 # SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=True
 # BED_MESH_CALIBRATE_BASE
 # SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=False
 
#[gcode_macro G28]
#rename_existing: G0028
#variable_homing:False

#gcode:
#  SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=True
 # G0028
 # SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=False

#	REV 1.4 07-10-23 

# NEOPIXEL_DISPLAY LED="disco1" TYPE=bed_temp MODE=glow   just like this

##########################
#      SPEED BABY        #
##########################
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                #G28 Z ### <--commented out
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28  ### <--changed from G28 XY
        G90  ### <--added to correct issue 66
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro DISABLE_STEPPERS]
gcode:  
    M84

[gcode_macro CHANGE_FILAMENT]
gcode:
    G0 X100 Y0 Z100

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
   SAVE_GCODE_STATE NAME=STATE_G32
   G90
   G28
   QUAD_GANTRY_LEVEL
   G28
   PARK
   RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro INPUT_SHAPER_CALIBRATE]
gcode:
   SHAPER_CALIBRATE

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_PIN PIN=nevermore VALUE=0        ; turn nevermore fan off     
    #SET_PIN PIN=neopixel disco1 VALUE=0       ; turn case light off
    #SET_PIN PIN=neopixel disco2 VALUE=0       ; turn case light off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

# [delayed_gcode setdiscosticks]
#initial_duration: 1
#gcode:
        #NEOPIXEL_DISPLAY LED="disco1" TYPE=extruder_temp MODE=glow
        #NEOPIXEL_DISPLAY LED="disco2" TYPE=bed_temp MODE=glow

################################################
###### STANDARD INPUT_SHAPER CALIBRATIONS ######
################################################
# Written by Frix_x#0161 #
# @version: 1.3

# CHANGELOG:
#   v1.3: added possibility to override the default parameters
#   v1.2: added EXCITATE_AXIS_AT_FREQ to hold a specific excitating frequency on an axis and diagnose mechanical problems
#   v1.1: added M400 to validate that the files are correctly saved to disk
#   v1.0: first version of the automatic input shaper workflow

# -------------------------------------------------------------------------------------------------------------------------
# If you want to use it into your own config, please install it as a standalone macro as described in the
# installation section of this file: docs > features > is_workflow.md
# -------------------------------------------------------------------------------------------------------------------------

### What is it ? ###
# This macro helps you to configure the input shaper algorithm of Klipper by running the tests sequencially and calling an automatic script
# that generate the graphs, manage the files and so on. It's basically a fully automatic input shaper calibration workflow.
# Results can be found in your config folder using FLuidd/Maisail file manager.

# The goal is to make it easy to set, share and use it.

# Usage:
#   1. Call the AXES_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.
#   2. Call the BELTS_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.
#   3. If you find out some strange noise, you can use the EXCITATE_AXIS_AT_FREQ macro to diagnose the origin


[gcode_macro AXES_SHAPER_CALIBRATION]
description: Run standard input shaper test for all axes
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.3)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=X FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=Y FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


[gcode_macro BELTS_SHAPER_CALIBRATION]
description: Run custom demi-axe test to analyze belts on CoreXY printers
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.33)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS


[gcode_macro EXCITATE_AXIS_AT_FREQ]
description: Maintain a specified input shaper excitating frequency for some time to diagnose vibrations
gcode:
    {% set FREQUENCY = params.FREQUENCY|default(25)|int %}
    {% set TIME = params.TIME|default(10)|int %}
    {% set AXIS = params.AXIS|default("x")|string|lower %}

    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQUENCY-1} FREQ_END={FREQUENCY+1} HZ_PER_SEC={1/(TIME/3)}
    M400

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_shell_command plot_graph]
command: bash /home/biqu/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

#[delayed_gcode setdiscosticks]
#initial_duration: 1
#gcode:
#        NEOPIXEL_DISPLAY LED="disco1" TYPE=extruder_temp MODE=glow
#        NEOPIXEL_DISPLAY LED="disco2" TYPE=bed_temp MODE=glow

[gcode_macro PRINT_START]

#YOU MUST ADD THES LINES TO super SLICER PRINT START COED IN THE PRTER SETTINGS SECTION OR NOT OF THIS WLL WORK - EACH LINE MUST BE UNCOMMENTED
#M104 S0 ; Stops PrusaSlicer from sending temp waits separately
#M140 S0
#print_start EXTRUDER=[first_layer_temperature[initial_extruder]] BED=[first_layer_bed_temperature]
gcode:


  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  
  SET_DISPLAY_TEXT MSG="HOMING ALL"                # Displays info  
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position
 ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  SET_DISPLAY_TEXT MSG="CLEAR MESH"      # Displays info 
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="BED HEAT: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 1min"                # Displays info
    G4 P6000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="TAPPITY TaP 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c
  
  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  SET_DISPLAY_TEXT MSG="CALIBRATING Z"      # Displays info  
  status_calibrating_z  
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="BED MESHING"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
 SET_DISPLAY_TEXT MSG="RUBBA-SCRUB!"                # Displays info
  status_cleaning
  CLEAN_NOZZLE
   
# Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

##------------------------------------------------------------------------------------------##
################################ END PRINT ###################################################
##------------------------------------------------------------------------------------------##

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
     
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    SET_DISPLAY_TEXT MSG="NEVERMORE SHUT DOWN"          # Displays info
    SET_PIN PIN=nevermore VALUE=0                      # Turns OFF the nevermore
    SET_DISPLAY_TEXT MSG="JOB 100% COMPLETE"          # Displays info
    status_off
    OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


    

 # z off was -0.385

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.405
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.056250, 0.070000, 0.127500, 0.076250, 0.006250
#*# 	  -0.015000, 0.000000, 0.048750, -0.016250, -0.096250
#*# 	  -0.023750, -0.020000, -0.003750, -0.061250, -0.156250
#*# 	  0.055000, 0.048750, 0.058750, -0.022500, -0.136250
#*# 	  0.255000, 0.202500, 0.205000, 0.117500, 0.013750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 340.0
#*# min_y = 10.0
#*# max_y = 340.0
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 71.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 36
